#Sentinel使用端口
port 26379
 
#打开非保护模式
protected-mode no
 
#守护线程启动(即后台启动)
daemonize yes
 
#守护进程会使用到的一个文件
pidfile "/var/run/redis-sentinel.pid"
 
#指定日志文件名,默认为"",空字符串也可用于强制Sentinel登录标准输出,指定后我们可以通过tail -f xxx.log查看日志
logfile "/usr/local/redis/bin/redis-sentinel.log"
 
#每个长时间运行的进程都应该有一个明确定义的工作目录。对于Redis Sentinel来说，启动时dir到/tmp是最简单的事情为进程不干扰管理任务，如卸载文件系统。(默认就是"/tmp",copy过来即可)
dir "/tmp"
 
#重要的来了
#sentinel monitor <master-name> <ip> <redis-port> <quorum>
#告诉sentinel去监听地址为ip:port的一个master,这里的master-name可以自定义,quorum是一个数字,指明当
#有多少个sentinel认为一个master失效时,master才算真正失效.需要注意的是master-ip 要写真实
#的ip地址而不要用回环地址（127.0.0.1）。
sentinel monitor mymaster 192.168.223.129 6380 2

 sentinel auth-pass mymaster 123456
#sentinel down-after-milliseconds <master-name> <milliseconds> 
#这个配置项指定需要多少时间无响应,一个master才会被这个sentinel主观地认为是不可用的.单位是毫秒,默认为30秒
sentinel down-after-milliseconds mymaster 10000

 
#sentinel parallel-syncs <master-name> <numslaves> 
#这个配置项指定了在发生failover主备切换时最多可以有多少个slave同时对新的master进行同步,这个数字越小,完成failover所需的时间就越长,但是如果这个数字越大,就意味着越 多的slave因为replication而不可用.可以通过将这个值设为1(默认就是1)来保证每次只有一个slave处于不能处理命令请求的状态
sentinel parallel-syncs mymaster 1

 
#sentinel failover-timeout <master-name> <milliseconds>
# failover过期时间，当failover开始后，在此时间内仍然没有触发任何failover操作，当前sentinel 将会认为此次failover失败,默认为3分钟,单位为毫秒
sentinel failover-timeout mymaster 180000



 

 

